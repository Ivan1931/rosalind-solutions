(use '[clojure.string :as string])

(defn find-substring-indexes
  [substr look-str]

  (def sub-str-length (count substr))
  (def look-str-length (count look-str))
  (loop [current-string look-str
         index 1
         sub-string-indexes []]
    (if
      (>= (count current-string) sub-str-length)
      (recur
       (string/join (rest current-string))
       (+ index 1)
       (if
         (= (subs current-string 0 sub-str-length) substr)
         (conj sub-string-indexes index)
         sub-string-indexes))
      sub-string-indexes)))

(defn replace-lines
  "Replaces all lines in a string"
  [s]
  (string/replace s #"\n" ""))

;;this is the problem
(comment (println (find-substring-indexes "ACCGAAGAC" (string/replace "GACCACCGAAGATTGCTGACCGAAGTACAACACCGAAGCGCACC
GAAGGACCGAAGCACCGAAGACCGAAGACCGAAGTACGACCGAAGCACCGAAGATAACCGAAGACCGAAGCGACCGAAGGATGCCACCGAAGACCGAAGAACCGAAGACCGAAGGACCGAAGTCAGACCGA
AGACATACCGAAGACCGAAGACCGAAGTGGTTCAACCGAAGGAACCGAAGGTAGTCTACCGAAGGACCGAAGCCGGTAGACCGAAGAACCGAAGCACCGAAGGGACAG
GACCGAAGCTTCACCACCGAAGACCGAAGACCGAAGTGATACCGAAGCCACCGAAGAACCGAAGAATGCTAACCGAAGGTACCGAAGCACCGAAGAAACCGAAGAGCCACCGAAGCCA
AACCGAAGGTCCACCGAAGCTGTCGTACCGAAGACCGAAGTAGTACCGAAGACCGAAGCTATGATGCATTTGACCGAAGTTACCGAAGACCGAAGACCGAAGGGCTACCGAAGACCGAAGACCGAAGTCT
CGACCGAAGTGGACCGAAGACCGAAGACCGAAGCACCGAAGTACCGAAGCTACCGAAGAACCGAAGCCATGACCGAAGAGGTACCGAAGCCGACCGAAGACCGAAGTCGGCCTAACCGAAGGGGCTCACCGAAGCCACCGAAGACCGA
AGACCGAAGCCATCGCACAACCGAAGCTCTACTACCGAAGCCACCGAAGATGGTGTGGCGACCGAAGTGGAACCTACCGAAGATTTGACCGAAGACCGAAGCACCGAAGACGACCGAAGACCGAAGCGACCGAAGACCGA
AGCATACCGAAGCACCGAAGTATAAACCGAAGTAGCCCGAAAAACCGAAGACCGAAGGTACCGAAGTAGACCGAAGCAAACCGAAGGTCCACCGAAGACCGAAGAAACCGAAGTATACCGAAGACCGAAGA" #"\n" ""))))
